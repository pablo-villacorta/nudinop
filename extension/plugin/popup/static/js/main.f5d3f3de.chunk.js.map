{"version":3,"sources":["logo.svg","ImageFilterSection.js","Content.js","App.js","reportWebVitals.js","index.js"],"names":["ImageFilterSection","props","type","onChange","this","handleActiveChange","checked","filterActive","style","React","Component","Content","state","words","word","filterOut","searchTerm","newWordText","textFilterActive","visualFilterActive","overallActive","loadStateFromStorage","console","log","setState","handleSearchTermChange","bind","handleNewWordChange","handleAddNewWord","handleWordDelete","handleTextFilterActiveChange","handleOverallActiveChange","handleVisualFilterActiveChange","callback","chrome","storage","sync","get","nudinop_banned_words","nudinop_visual_filter_active","nudinop_text_filter_active","nudinop_active","newWords","to_store","set","activations","i","length","updateWordsFromStorage","event","target","value","push","delindex","indexOf","splice","updateActivationStateFromStorage","searchTermLower","toLowerCase","map","includes","id","handleWordBanChange","onClick","placeholder","renderSearchBox","renderWords","renderNewWordForm","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5d3f3de.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './TableWrapper.css'\r\n\r\nclass ImageFilterSection extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <h3>Image Filter</h3>\r\n                    {/* <input type=\"range\" min=\"0\" max=\"1\" class=\"slider\" step=\"0.1\" id=\"hentai-slider\" /><br/>\r\n                    <input type=\"range\" min=\"0\" max=\"1\" class=\"slider\" step=\"0.1\" id=\"hentai-slider\" /><br/>\r\n                    <input type=\"range\" min=\"0\" max=\"1\" class=\"slider\" step=\"0.1\" id=\"hentai-slider\" /><br/>\r\n                    <input type=\"range\" min=\"0\" max=\"1\" class=\"slider\" step=\"0.1\" id=\"hentai-slider\" /><br/>\r\n                    <input type=\"range\" min=\"0\" max=\"1\" class=\"slider\" step=\"0.1\" id=\"hentai-slider\" /><br/> */}\r\n                <label>Image Filter Active <input type=\"checkbox\" onChange={this.props.handleActiveChange} checked={this.props.filterActive} \r\n                                style={{\"cursor\": \"pointer\"}}/></label>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n        \r\nexport default ImageFilterSection;","/*global chrome*/\r\n\r\nimport React from 'react';\r\nimport './TableWrapper.css';\r\nimport './ImageFilterSection.js';\r\nimport ImageFilterSection from './ImageFilterSection.js';\r\n\r\nclass Content extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            words: [{word: \"cheese\", filterOut: true}],\r\n            searchTerm: null,\r\n            newWordText: null,\r\n            textFilterActive: true,\r\n            visualFilterActive: true,\r\n            overallActive: true\r\n        }\r\n\r\n        this.loadStateFromStorage((words, visualFilterActive, textFilterActive, overallActive) => {\r\n            console.log(textFilterActive);\r\n            this.setState({\r\n                words: words,\r\n                textFilterActive: textFilterActive,\r\n                visualFilterActive: visualFilterActive,\r\n                overallActive: overallActive\r\n            })\r\n        })        \r\n\r\n        this.handleSearchTermChange = this.handleSearchTermChange.bind(this);\r\n        this.handleNewWordChange = this.handleNewWordChange.bind(this);\r\n        this.handleAddNewWord = this.handleAddNewWord.bind(this);\r\n        this.handleWordDelete = this.handleWordDelete.bind(this);\r\n        this.handleTextFilterActiveChange = this.handleTextFilterActiveChange.bind(this);\r\n        this.handleOverallActiveChange = this.handleOverallActiveChange.bind(this);\r\n        this.handleVisualFilterActiveChange = this.handleVisualFilterActiveChange.bind(this);\r\n    }\r\n\r\n    loadStateFromStorage(callback) {\r\n        chrome.storage.sync.get([\r\n            \"nudinop_banned_words\", \r\n            \"nudinop_visual_filter_active\", \r\n            \"nudinop_text_filter_active\", \r\n            \"nudinop_active\"], ({ nudinop_banned_words,  nudinop_visual_filter_active, nudinop_text_filter_active, nudinop_active }) => {\r\n                \r\n            callback(nudinop_banned_words ?? [],  nudinop_visual_filter_active ?? true, nudinop_text_filter_active ?? true, nudinop_active ?? true);\r\n        });\r\n    }\r\n\r\n    updateWordsFromStorage(newWords) {\r\n        let to_store = {\r\n            nudinop_banned_words: newWords\r\n        };\r\n        chrome.storage.sync.set(to_store, function() {});\r\n    }\r\n\r\n    updateActivationStateFromStorage(activations) {\r\n        let to_store = {\r\n            nudinop_visual_filter_active: activations.visualFilterActive,\r\n            nudinop_text_filter_active: activations.textFilterActive,\r\n            nudinop_active: activations.overallActive\r\n        }\r\n        chrome.storage.sync.set(to_store, function() {});\r\n    }\r\n\r\n    handleWordBanChange(word) {\r\n        let words = [...this.state.words];\r\n\r\n        for (let i = 0; i < words.length; i++) {\r\n            if (words[i].word === word.word) {\r\n                words[i] = {\r\n                    word: word.word,\r\n                    filterOut: !word.filterOut\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n        \r\n        this.setState({words});\r\n        this.updateWordsFromStorage(words)\r\n\r\n    }\r\n\r\n    handleSearchTermChange(event) {\r\n        this.setState({searchTerm: event.target.value});\r\n    }\r\n\r\n    handleNewWordChange(event) {\r\n        this.setState({newWordText: event.target.value})\r\n    }\r\n\r\n    handleAddNewWord(event) {\r\n        if (!this.state.newWordText || this.state.newWordText.length <= 0) return;\r\n        let words = [...this.state.words];\r\n        words.push({\r\n            word: this.state.newWordText,\r\n            filterOut: true\r\n        });\r\n\r\n        this.setState({\r\n            words: words,\r\n            newWordText: \"\"\r\n        })\r\n\r\n        this.updateWordsFromStorage(words);\r\n    }\r\n\r\n    handleWordDelete(word) {\r\n        let words = [...this.state.words];\r\n        let delindex = words.indexOf(word);\r\n        if (delindex < 0) return;\r\n        words.splice(delindex, 1);\r\n        this.setState({words: words});\r\n        this.updateWordsFromStorage(words);\r\n    }\r\n\r\n    handleTextFilterActiveChange(event) {\r\n        this.setState({\r\n            textFilterActive: !this.state.textFilterActive\r\n        })\r\n        this.updateActivationStateFromStorage({\r\n            textFilterActive: !this.state.textFilterActive,\r\n            visualFilterActive: this.state.visualFilterActive,\r\n            overallActive: this.state.overallActive\r\n        });\r\n    }\r\n    \r\n    handleOverallActiveChange(event) {\r\n        this.setState({\r\n            overallActive: !this.state.overallActive\r\n        })\r\n        this.updateActivationStateFromStorage({\r\n            textFilterActive: this.state.textFilterActive,\r\n            visualFilterActive: this.state.visualFilterActive,\r\n            overallActive: !this.state.overallActive\r\n        });\r\n    }\r\n\r\n    handleVisualFilterActiveChange(event) {\r\n        this.setState({\r\n            visualFilterActive: !this.state.visualFilterActive\r\n        })\r\n        this.updateActivationStateFromStorage({\r\n            textFilterActive: this.state.textFilterActive,\r\n            visualFilterActive: !this.state.visualFilterActive,\r\n            overallActive: this.state.overallActive\r\n        });\r\n    }\r\n\r\n    renderWords() {\r\n        let searchTermLower = this.state.searchTerm ? this.state.searchTerm.toLowerCase() : null;\r\n\r\n        return this.state.words.map(word => {\r\n            if (this.state.searchTerm) {\r\n                if (!word.word.toLowerCase().includes(searchTermLower)) return null;\r\n            }\r\n            return (\r\n                <tr>\r\n                    <td style={{\"max-width\": \"200px\", \"word-wrap\": \"break-word\"}}>{word.word}</td>\r\n                    <td><input type=\"checkbox\" id=\"cbox1\" value=\"first_checkbox\" style={{\"cursor\": \"pointer\"}} checked={word.filterOut}\r\n                            onChange={() => this.handleWordBanChange(word)}/>\r\n                    </td>\r\n                    <td><span style={{\"cursor\": \"pointer\"}} onClick={() => this.handleWordDelete(word)}>&#10005;</span></td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderSearchBox() {\r\n        return (\r\n            <input type=\"text\" value={this.state.searchTerm} onChange={this.handleSearchTermChange} \r\n                    style={{\"width\": \"80%\", \"margin\": \"10px\"}} placeholder=\"Search...\"/>\r\n        )\r\n    }\r\n\r\n    renderNewWordForm() {\r\n        return (\r\n            <div style={{\"margin-right\": \"5%\", \"margin-left\": \"5%\"}}>\r\n                <table>\r\n                    <td>\r\n                        <input type=\"text\" style={{\"width\": \"95%\"}} placeholder=\"New word...\" onChange={this.handleNewWordChange} value={this.state.newWordText}/>\r\n                    </td>\r\n                    <td>\r\n                        <button onClick={this.handleAddNewWord}>Add word</button>\r\n                    </td>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n        \r\n    render() {\r\n        return (\r\n            <div id=\"table-wrapper\">\r\n                <h1>Nudinop</h1>\r\n                <label>Overall Active <input type=\"checkbox\" onChange={this.handleOverallActiveChange} checked={this.state.overallActive} \r\n                            style={{\"cursor\": \"pointer\"}}/></label>\r\n                <ImageFilterSection filterActive={this.state.visualFilterActive}\r\n                                    handleActiveChange={this.handleVisualFilterActiveChange} />\r\n                <section>\r\n                <h3>Text Filter</h3>\r\n                    <label>Text Filter Active <input type=\"checkbox\" onChange={this.handleTextFilterActiveChange} checked={this.state.textFilterActive} \r\n                            style={{\"cursor\": \"pointer\"}}/></label>\r\n                    { this.renderSearchBox() }\r\n                    <div id=\"table-scroll\">\r\n                        <table>\r\n                            <tr>\r\n                                <th style={{\"width\": \"80%\", \"max-width\": \"200px\", \"word-wrap\": \"break-word\"}}>Word</th>\r\n                                <th>Ban?</th>\r\n                            </tr>\r\n                            { this.renderWords() }\r\n                        </table>\r\n                    </div>\r\n                    { this.renderNewWordForm() }\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n        \r\nexport default Content;","import logo from './logo.svg';\nimport './App.css';\n\nimport Content from './Content.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Content/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}